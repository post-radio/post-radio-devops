---
- hosts: webserver
  become: yes
  vars_files:
    - vars.yml

  tasks:
    - name: Install required system packages
      apt:
        name:
          - nginx
          - certbot
          - python3-certbot-nginx
          - git
          - apt-transport-https
          - wget
          - snapd
          - docker.io
          - python3-pip
        state: present

    - name: Set Docker Compose download URL
      set_fact:
        docker_compose_url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ ansible_system }}-{{ ansible_machine }}"

    - name: Download Docker Compose
      command:
        cmd: "curl -L '{{ docker_compose_url }}' -o /usr/local/bin/docker-compose"

    - name: Make Docker Compose executable
      command:
        cmd: "chmod +x /usr/local/bin/docker-compose"


    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Copy nginx configuration
      template:
        src: nginx.default.conf.j2
        dest: /etc/nginx/sites-enabled/default
      notify:
        - Restart nginx

    - name: Install Certbot and Nginx plugin
      apt:
        name:
          - certbot
          - python3-certbot-nginx
        state: present

    - name: Check if SSL certificate exists
      stat:
        path: /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem
      register: cert_stat
    
    - name: Obtain a certificate using the Nginx plugin
      command:
        cmd: certbot --nginx -d {{ domain_name }} -d {{ domain_alias }} --non-interactive --agree-tos --email {{ admin_email }}
        creates: "/etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
      when: not cert_stat.stat.exists
      notify:
        - Restart nginx

    - name: Copy nginx configuration
      template:
        src: nginx.ssl.conf.j2
        dest: /etc/nginx/sites-enabled/default
      notify:
        - Restart nginx

    - name: Set up certbot renewal cron job
      cron:
        name: Certbot Renewal
        minute: "30"
        hour: "2"
        job: "certbot renew --quiet --post-hook 'systemctl reload nginx'"

    - name: Clone project repository
      git:
        repo: "{{ git_repository }}"
        dest: "{{ project_directory }}"
        version: main

    - name: Stop all docker containers
      shell: |
        docker stop $(docker ps -a -q)

    - name: Build Docker image for the project
      command:
        cmd: docker-compose up --build
        chdir: "{{ project_directory }}"

  handlers:
    - name: Restart nginx
      service:
        name: nginx
        state: restarted
